# vi: ft=dosini
[main]

# Enables context sensitive auto-completion.
smart_completion = True

# Display the completions in several columns.
wider_completion_menu = False

# Do not create new connections for refreshing completions;
always_use_single_connection = False

# Allows breaking up the sql statements into multiple lines. 
# If set to True, the end of the statements must have a semi-colon.
multi_line = False

# If multi_line_mode is set to "psql", in multi-line mode, 
# [Enter] will execute the current input if the ending in a semicolon.
# If multi_line_mode is set to "safe", in multi-line mode, 
# [Enter] will always insert a newline, 
# and [Esc] [Enter] or [Alt]-[Enter] is used to execute.
multi_line_mode = psql

# Alert before executing a statement that may harm to the database.
destructive_warning = drop, shutdown, delete, truncate, alter, update, unconditional_update

# When `destructive_warning` is on 
# and the user declines to proceed with a destructive statement, 
# the current transaction (if any) is left untouched, by default. 
# When setting `destructive_warning_restarts_connection` to "True", 
# the connection to the server is restarted. 
# In that case, the transaction (if any) is rolled back.
destructive_warning_restarts_connection = False

# When this option is on (and if `destructive_warning` is not empty),
# destructive statements are not executed when outside of a transaction.
destructive_statements_require_transaction = False

# Enables expand mode, which is similar to `\x` in psql.
expand = False

# Enables auto expand mode, which is similar to `\x auto` in psql.
auto_expand = False

# Auto-retry queries on connection failures and other operational errors. 
auto_retry_closed_connection = True

# If set to True, table suggestions will include a table alias
generate_aliases = False

# Path to a json file that specifies specific table aliases 
# to use when generate_aliases is set to True; this file should be:
# {
#     "some_table_name": "desired_alias",
#     "some_other_table_name": "another_alias"
# }
alias_map_file =

# log_file location.
# In Unix/Linux: ~/.config/pgcli/log
log_file = default

# keyword casing preference. Possible values: "lower", "upper", "auto"
keyword_casing = auto

# casing_file location.
casing_file = default

generate_casing_file = False

# Casing of column headers based on the casing_file described above
case_column_headers = True

# history_file location.
history_file = default

# Default log level: "CRITICAL", "ERROR", "WARNING", "INFO" and "DEBUG". 
# "NONE" disables logging.
log_level = INFO

# Order of columns when expanding * to column list
# Possible values: "table_order" and "alphabetic"
asterisk_column_order = table_order

# Whether to qualify with table alias/name when suggesting columns
# Possible values: "always", "never" and "if_more_than_one_table"
qualify_columns = if_more_than_one_table

# When no schema is entered, only suggest objects in search_path
search_path_filter = False

# Timing of sql statements and table rendering.
timing = False

# Show/hide informational toolbar with function keymap at the footer.
show_bottom_toolbar = False

# Recommended: psql, fancy_grid and grid.
table_format = psql

syntax_style = vim

vi = True

# Error handling
# When one of multiple SQL statements causes an error, choose to either
# continue executing the remaining statements, or stopping
# Possible values "STOP" or "RESUME"
on_error = STOP

# Set threshold for row limit.
row_limit = 1000

# Truncate long text to this value for display (does not apply to csv).
max_field_width = 500

# Skip intro on startup and goodbye on exit
less_chatty = True

# Show all Postgres error fields as listed at:
# https://www.postgresql.org/docs/current/protocol-error-fields.html.
# Can be toggled with \v.
verbose_errors = False

# Postgres prompt
# \t - Current date and time
# \u - Username
# \h - Short hostname of the server (up to first '.')
# \H - Hostname of the server
# \d - Database name
# \p - Database port
# \i - Postgres PID
# \# - "@" sign if logged in as superuser, '>' in other case
# \n - Newline
# \dsn_alias - name of dsn connection string alias if -D option is used (empty otherwise)
# \x1b[...m - insert ANSI escape sequence
# eg: prompt = '\x1b[35m\u@\x1b[32m\h:\x1b[36m\d>'
prompt = '\u@\h:\d> '

# Number of lines to reserve for the suggestion menu
min_num_menu_lines = 6

# Character used to left pad multi-line queries to match prompt size.
multiline_continuation_char = ''

# The string used in place of a null value.
null_string = '<nil>'

# manage pager on startup
enable_pager = True

# Use keyring to automatically save and load password in a secure manner
keyring = True

# Automatically set the session time zone to the local time zone
use_local_timezone = False

# Catppuccin Mocha colors for pgcli
[colors]
completion-menu.completion.current = 'bg:#585b70 #cdd6f4'
completion-menu.completion = 'bg:#313244 #bac2de'
completion-menu.meta.completion.current = 'bg:#45475a #cdd6f4'
completion-menu.meta.completion = 'bg:#313244 #a6adc8'
completion-menu.multi-column-meta = 'bg:#45475a #cdd6f4'
scrollbar.arrow = 'bg:#313244'
scrollbar = 'bg:#45475a'
selected = '#1e1e2e bg:#89b4fa'
search = '#cdd6f4 bg:#89b4fa'
search.current = '#1e1e2e bg:#a6e3a1'
bottom-toolbar = 'bg:#1e1e2e #bac2de'
bottom-toolbar.off = 'bg:#1e1e2e #6c7086'
bottom-toolbar.on = 'bg:#1e1e2e #cdd6f4'
search-toolbar = 'noinherit bold'
search-toolbar.text = 'nobold'
system-toolbar = 'noinherit bold'
arg-toolbar = 'noinherit bold'
arg-toolbar.text = 'nobold'
bottom-toolbar.transaction.valid = 'bg:#1e1e2e #a6e3a1 bold'
bottom-toolbar.transaction.failed = 'bg:#1e1e2e #f38ba8 bold'

# style classes for colored table output
output.header = "#00ff5f bold"
output.odd-row = ""
output.even-row = ""
output.null = "#808080 italic"

# Named queries are queries you can execute by name.
[named queries]

# Here's where you can provide a list of connection string aliases.
# You can use it by passing the -D option. `pgcli -D example_dsn`
[alias_dsn]
# example_dsn = postgresql://[user[:password]@][netloc][:port][/dbname]

# Format for number representation
# for decimal "d" - 12345678, ",d" - 12,345,678
# for float "g" - 123456.78, ",g" - 123,456.78
[data_formats]
decimal = ""
float = ""

# Per column formats for date/timestamp columns
[column_date_formats]
# use strftime format, e.g.
# created = "%Y-%m-%d"
